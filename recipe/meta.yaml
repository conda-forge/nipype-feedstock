{% set version = "1.1.6" %}
{% set name = "nipype" %}
{% set sha256 = "bdc2e0d9ad953714df311c645bb96fb46ba487f90dce4c81ed95269c7a91a381" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://github.com/nipy/{{ name }}/archive/{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  script: {{ PYTHON }} -m pip install --no-deps --ignore-installed .

requirements:
  build:
    - python
    - pip
    - setuptools
    - future >=0.16.0
    - configparser  # [py27 or py34]
    - pywin32  # [win]

  run:
    - python
    - nibabel >=2.1.0
    - networkx >=1.9
    - numpy >=1.9.0  # [py < 3.7]
    - numpy >=1.15.3  # [py >= 3.7]
    - python-dateutil >=2.2
    - scipy >=0.14
    - traits >=4.6
    - future >=0.16.0
    - simplejson >=3.8.0
    - prov ==1.5.0
    - click >=6.6.0
    - funcsigs
    - configparser  # [py27 or py34]
    - pytest >=3.0
    - pytest-xdist
    - mock
    - pydotplus
    - xvfbwrapper
    - psutil
    - matplotlib
    - pywin32  # [win]
    - packaging
    - futures  # [py27]

test:
  # Python imports
  imports:
    - nipype

about:
  home: https://github.com/nipy/nipype
  license: Apache 2.0
  license_file: '{{ environ["RECIPE_DIR"] }}/LICENSE'
  summary: 'Nipype, an open-source, community-developed initiative under the
  umbrella of NiPy, is a Python project that provides a uniform interface to
  existing neuroimaging software and facilitates interaction between these
  packages within a single workflow. Nipype provides an environment that
  encourages interactive exploration of algorithms from different packages
  (e.g., SPM, FSL, FreeSurfer, AFNI, Slicer, ANTS), eases the design of
  workflows within and between packages, and reduces the learning curve
  necessary to use different packages. Nipype is creating a collaborative
  platform for neuroimaging software development in a high-level language and
  addressing limitations of existing pipeline systems.'

extra:
  recipe-maintainers:
    - chrisfilo
    - satra
    - mgxd
    - effigies
